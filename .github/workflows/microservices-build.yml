name: Build and Push Docker Images (Individual)

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service: [login-server, char-server, map-server]
        include:
          - service: login-server
            dockerfile: ./services/login-server/Dockerfile
            context: .
          - service: char-server
            dockerfile: ./services/char-server/Dockerfile
            context: .
          - service: map-server
            dockerfile: ./services/map-server/Dockerfile
            context: .

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/mithia-${{ matrix.service }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push ${{ matrix.service }} image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.context }}
        file: ${{ matrix.dockerfile }}
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

  # Optional: Create a summary job that lists all built images
  summary:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
    - name: Summary
      run: |
        echo "## Microservices Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "The following Mithia server containers were built:" >> $GITHUB_STEP_SUMMARY
        echo "- **Login Server**: \`ghcr.io/${{ github.repository }}/mithia-login-server:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Character Server**: \`ghcr.io/${{ github.repository }}/mithia-char-server:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Map Server**: \`ghcr.io/${{ github.repository }}/mithia-map-server:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Usage:" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "# Deploy with microservices compose" >> $GITHUB_STEP_SUMMARY
        echo "docker-compose -f docker-compose.microservices.yml up" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Scale map servers" >> $GITHUB_STEP_SUMMARY
        echo "docker-compose -f docker-compose.microservices.yml up --scale mithia-map=3" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY