name: Integration Tests

on:
  workflow_run:
    workflows: ["Build and Push Docker Images (Individual)"]
    types:
      - completed
  workflow_dispatch:  # Allow manual triggering

jobs:
  test-microservices:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install test dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y netcat-openbsd

    - name: Build microservices images
      run: |
        echo "Building microservices containers..."
        docker compose build --parallel

    - name: Show Docker images
      run: |
        echo "Built images:"
        docker images | grep mithia

    - name: Run integration tests
      run: |
        echo "Starting integration test suite..."
        chmod +x docker/test-integration.sh
        ./docker/test-integration.sh

    - name: Collect service logs on failure
      if: failure()
      run: |
        echo "=================================="
        echo "   COLLECTING FAILURE DIAGNOSTICS"
        echo "=================================="

        echo ""
        echo "=== Docker Compose Status ==="
        docker compose ps || true

        echo ""
        echo "=== Container Logs ==="
        docker compose logs --tail=50 || true

        echo ""
        echo "=== Login Server Logs ==="
        docker compose logs mithia-login || true

        echo ""
        echo "=== Character Server Logs ==="
        docker compose logs mithia-char || true

        echo ""
        echo "=== Map Server Logs ==="
        docker compose logs mithia-map || true

        echo ""
        echo "=== Database Logs ==="
        docker compose logs mithia-db || true

        echo ""
        echo "=== Network Information ==="
        docker network ls || true
        docker compose exec -T mithia-char ip addr show || true

    - name: Cleanup test environment
      if: always()
      run: |
        echo "Cleaning up test environment..."
        docker compose down -v --remove-orphans || true
        docker system prune -f || true

  # Summary job that depends on the test completion
  test-summary:
    runs-on: ubuntu-latest
    needs: test-microservices
    if: always()

    steps:
    - name: Test Results Summary
      run: |
        if [ "${{ needs.test-microservices.result }}" == "success" ]; then
          echo "## ✅ Integration Tests Passed" >> $GITHUB_STEP_SUMMARY
          echo "All microservices are working correctly:" >> $GITHUB_STEP_SUMMARY
          echo "- Login server: Running and accessible" >> $GITHUB_STEP_SUMMARY
          echo "- Character server: Running and accessible" >> $GITHUB_STEP_SUMMARY
          echo "- Map server: Running and accessible" >> $GITHUB_STEP_SUMMARY
          echo "- Database: Connected and responsive" >> $GITHUB_STEP_SUMMARY
          echo "- Service discovery: Working correctly" >> $GITHUB_STEP_SUMMARY
          echo "- Configuration generation: IP resolution successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🚀 **Ready for deployment!**" >> $GITHUB_STEP_SUMMARY
        else
          echo "## ❌ Integration Tests Failed" >> $GITHUB_STEP_SUMMARY
          echo "The microservices integration test failed." >> $GITHUB_STEP_SUMMARY
          echo "Please check the test logs for details." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Common issues to check:" >> $GITHUB_STEP_SUMMARY
          echo "- Docker build failures" >> $GITHUB_STEP_SUMMARY
          echo "- Service startup problems" >> $GITHUB_STEP_SUMMARY
          echo "- Network connectivity issues" >> $GITHUB_STEP_SUMMARY
          echo "- Configuration file generation" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi